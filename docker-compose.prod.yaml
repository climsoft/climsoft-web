
services:
  climsoft_nginx_proxy:
    image: climsoftdevelopers/climsoft-nginx-proxy:preview-1
    container_name: climsoft-nginx-proxy
    restart: always
    ports: # Expose to external network
      - "${HOST_HTTP_PORT}:80"
    depends_on:
      - climsoft_pwa
      - climsoft_api
    networks:
      - climsoft_network

  climsoft_pwa:
    image: climsoftdevelopers/climsoft-pwa:preview-1
    container_name: climsoft-pwa
    restart: always
    environment:
      HOST_IP_ADDRESS: "${HOST_IP_ADDRESS}" # used in config.json.
      HOST_HTTP_PORT: "${HOST_HTTP_PORT}" # used in config.json.
    expose: 
      - 80 # Expose to internal network only.
    depends_on:
      - climsoft_api
    networks:
      - climsoft_network

  climsoft_api:
    image: climsoftdevelopers/climsoft-api:preview-1
    container_name: climsoft-api
    restart: always
    environment:
      DB_HOST: climsoft_db
      DB_PORT: 5432
      DB_NAME: "${DB_NAME}"
      DB_USERNAME: postgres
      DB_PASSWORD: "${DB_PASSWORD}"
      FIRST_INSTALL: "${FIRST_INSTALL}"
      V4_SAVE: "${V4_SAVE}"
      V4_IMPORT: "${V4_IMPORT}"
      V4_DB_HOST: "${V4_DB_HOST}"
      V4_DB_PORT: "${V4_DB_PORT}"
      V4_DB_NAME: "${V4_DB_NAME}"
      V4_DB_USERNAME: "${V4_DB_USERNAME}"
      V4_DB_PASSWORD: "${V4_DB_PASSWORD}"
      V4_DB_UTCOFFSET: "${V4_DB_UTCOFFSET}"
    expose: 
      - 3000 # Expose to internal network only. Communication to the API can go through the nginx reverse proxy.
    depends_on:
      climsoft_db:
        condition: service_healthy # Wait until climsoft_db is healthy as indicate by healthcheck
    volumes:
      - climsoft_exports:/app/exports
    networks:
      - climsoft_network

  climsoft_db:
    image: postgis/postgis:17-3.5
    container_name: climsoft-db
    restart: always
    environment:
      POSTGRES_DB: "${DB_NAME}" # Default database postgres will create, required when setting up postgres the first time.
      POSTGRES_USER: postgres # Uses the default postgres username for simplicity, required when setting up postgres the first time.
      POSTGRES_PASSWORD: "${DB_PASSWORD}" # Super user password, required when setting up postgres the first time.
    ports: 
      - "5432:5432" # Expose to both external and internal network.
    volumes:
      - climsoft_database:/var/lib/postgresql/data
      - climsoft_exports:/var/lib/postgresql/exports
    networks:
      - climsoft_network
    # Recursively change the ownership of the /var/lib/postgresql/exports directory and all its contents to user postgres and group postgres.
    # The executes the default PostGIS/PostgreSQL startup entrypoint, passing postgres as the command to run the Postgres server.
    command: >
      sh -c "chown -R postgres:postgres /var/lib/postgresql/exports 
      && docker-entrypoint.sh postgres"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  climsoft_database:
  climsoft_exports:

networks:
  climsoft_network: